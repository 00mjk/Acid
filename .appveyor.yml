version: '0.13.8{build}'

clone_depth: 5

build:
  parallel: true
  verbosity: minimal

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      platform: x64
      ARCHITECTURE: x64
      GEN: "Visual Studio 15 2017 Win64"
      CFG: Release
      BUILD_OUT: "x64-Release"
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
#      platform: x86
#      ARCHITECTURE: x86
#      GEN: "Visual Studio 15 2017"
#      CFG: Release
#      BUILD_OUT: "x86-Release"
  VULKAN_SDK_URL: https://sdk.lunarg.com/sdk/download/1.1.126.0/windows/vulkan-sdk.exe?Human=true;u=
  VULKAN_SDK: "C:\\VulkanSDK\\1.1.126.0"
  OPENAL_SDK_URL: https://openal-soft.org/openal-binaries/openal-soft-1.20.0-bin.zip
  OPENALDIR: "C:\\openal-soft"
  NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip
  MSVC_HOME: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community"
  
cache:
  - C:\Tools\vcpkg\installed

install:
  - git submodule update --init --recursive
  # Get Vulkan SDK
  - appveyor DownloadFile %VULKAN_SDK_URL% -FileName vulkan-sdk.exe
  - .\vulkan-sdk.exe /S
  # Get OpenAL SDK
  - appveyor DownloadFile %OPENAL_SDK_URL% -FileName openal-soft.zip
  - 7z x openal-soft.zip && del /f openal-soft.zip
  - move "openal-soft-*" %OPENALDIR%
  # Get Ninja
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\ninja > nul
  # Sets the path
  - set PATH=C:\ninja;C:\Python36;%PATH%
  # VCPKG prebuilt & cached dependencies
  - vcpkg install volk:%platform%-windows glfw3:%platform%-windows freetype:%platform%-windows bullet3:%platform%-windows physfs:%platform%-windows gtest:%platform%-windows # openal-soft:%platform%-windows glslang:%platform%-windows

build_script:
  - call "%MSVC_HOME%\VC\Auxiliary\Build\vcvarsall.bat" %ARCHITECTURE%
  - mkdir Build\%BUILD_OUT% && cd Build\%BUILD_OUT%
  - cmake ../../ -GNinja -DCMAKE_BUILD_TYPE=%CFG% -Denable-pkgconfig=0 -DCMAKE_TOOLCHAIN_FILE=C:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DACID_LINK_RESOURCES=OFF
  - ninja
  - ninja install
  - cd ../../

after_build:
  - mkdir Artifacts\%CFG%_%ARCHITECTURE%
  - xcopy Build\%BUILD_OUT%\bin Artifacts\%CFG%_%ARCHITECTURE%\ /s/h/e/k/f/c
  - xcopy Resources Artifacts\%CFG%_%ARCHITECTURE%\Resources\Engine\ /s/h/e/k/f/c

artifacts:
  - path: Artifacts\%CFG%_%ARCHITECTURE%\
    name: "Examples $(appveyor_build_version) (%CFG% %ARCHITECTURE%)"
