name: CI

on: [push, pull_request]

env:
  VULKAN_VERSION: 1.2.135.0

jobs:
  build_linux_gcc:
    name: Linux Build (GCC 9)
    runs-on: ubuntu-19.04
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential pkg-config cmake ninja-build gcc-9 g++-9 xorg-dev libglu1-mesa-dev libvulkan-dev libopenal-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        wget -O vulkansdk.tar.gz https://sdk.lunarg.com/sdk/download/${VULKAN_VERSION}/linux/vulkansdk-linux-x86_64-${VULKAN_VERSION}.tar.gz
        mkdir "$GITHUB_WORKSPACE/vulkan_sdk/"
        tar zxf vulkansdk.tar.gz -C "$GITHUB_WORKSPACE/vulkan_sdk/"
        export VULKAN_SDK="$GITHUB_WORKSPACE/vulkan_sdk/${VULKAN_VERSION}/x86_64"
    - name: Build Acid
      run: |
        mkdir Build && cd Build
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install ..
        cmake --build . --target install --parallel 4
        
  build_linux_clang:
    name: Linux Build (Clang 9)
    runs-on: ubuntu-19.04
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main"
        sudo apt-get update -y
        sudo apt-get install -y build-essential pkg-config cmake ninja-build g++-9 clang-9 xorg-dev libglu1-mesa-dev libvulkan-dev libopenal-dev
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 1000
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-9 1000
        wget -O vulkansdk.tar.gz https://sdk.lunarg.com/sdk/download/${VULKAN_VERSION}/linux/vulkansdk-linux-x86_64-${VULKAN_VERSION}.tar.gz
        mkdir "$GITHUB_WORKSPACE/vulkan_sdk/"
        tar zxf vulkansdk.tar.gz -C "$GITHUB_WORKSPACE/vulkan_sdk/"
        export VULKAN_SDK="$GITHUB_WORKSPACE/vulkan_sdk/${VULKAN_VERSION}/x86_64"
    - name: Build Acid
      env:
        CC: clang-9
        CXX: clang++-9
      run: |
        mkdir Build && cd Build
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install ..
        cmake --Build . --target install --parallel 4
        
  build_windows:
    name: Windows Build (MSVC 19.25.28614)
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        set(vulkan_url "https://sdk.lunarg.com/sdk/download/${VULKAN_VERSION}/windows/vulkan-sdk.exe?Human=true;u=")
        file(DOWNLOAD "${vulkan_url}" ./vulkan-sdk.exe SHOW_PROGRESS)
        ./vulkan-sdk.exe /S
        set(ENV{PATH} "C:\\VulkanSDK\\${VULKAN_VERSION}")
    - name: Build Acid
      run: |
        cl
        mkdir Build
        cd Build
        cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX=install ..
        cmake --Build . --target install --parallel 4
        
  build_macos:
    name: macOS Build (clang 6.0)
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
        test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
        echo "::add-path::/home/linuxbrew/.linuxbrew/bin"
        brew update
        brew install pkg-config
        brew install openal-soft
        brew tap homebrew/cask
        brew cask install apenngrace/vulkan/vulkan-sdk
    - name: Build Acid
      env:
        CC: clang
        CXX: clang++
      run: |
        mkdir Build && cd Build
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install ..
        cmake --Build . --target install --parallel 4

  generate_docs:
    name: Doxygen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          mkdir -p Build/docs/html/Documents
          cp Documents/Screenshot*.png Build/docs/html/Documents
      - uses: mattnotmitt/doxygen-action@v1
      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./Build/docs/html