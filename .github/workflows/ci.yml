name: CI

on: [push, pull_request]

jobs:
  build_linux_gcc:
    name: Linux Build (GCC)
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update -y
        sudo apt-get install -y build-essential pkg-config cmake ninja-build gcc-9 g++-9 xorg-dev libglu1-mesa-dev libvulkan-dev libopenal-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
    - name: Build Acid
      run: |
        mkdir Build && cd Build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug
        cmake --build .
        sudo cmake --install .
        
  build_linux_clang:
    name: Linux Build (Clang)
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main"
        sudo apt-get update -y
        sudo apt-get install -y build-essential pkg-config cmake ninja-build g++-9 clang-9 xorg-dev libglu1-mesa-dev libvulkan-dev libopenal-dev
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 1000
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-9 1000
    - name: Build Acid
      env:
        CC: clang-9
        CXX: clang++-9
        LD_LIBRARY_PATH: /usr/bin/clang++-9/lib
      run: |
        mkdir Build && cd Build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug
        cmake --build .
        sudo cmake --install .
        
  build_windows:
    name: Windows Build (MSVC)
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: Setup Vulkan
      run: |
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.2.135.0/windows/VulkanSDK-1.2.135.0-Installer.exe" -OutFile VulkanSDK.exe
        $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
        $installer.WaitForExit();
    - name: Setup OpenAL
      run: |
        Invoke-WebRequest -Uri "https://openal-soft.org/openal-binaries/openal-soft-1.20.1-bin.zip" -OutFile openal-soft.zip
        Expand-Archive -Path openal-soft.zip -DestinationPath C:\\
    - name: Build Acid
      env:
        VULKAN_SDK: "C:\\VulkanSDK\\1.2.135.0"
        OPENALDIR: "C:\\openal-soft-1.20.1-bin"
      run: |
        mkdir Build
        cd Build
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug
        ninja
        ninja install
        
  build_macos:
    name: macOS Build (Apple clang)
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v1
    - name: Download Dependencies
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
        test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
        echo "::add-path::/home/linuxbrew/.linuxbrew/bin"
        brew update
        brew install pkg-config
        brew install openal-soft
        brew tap homebrew/cask
        brew cask install apenngrace/vulkan/vulkan-sdk
    - name: Build Acid
      env:
        CC: clang
        CXX: clang++
      run: |
        mkdir Build && cd Build
        cmake .. -G "Xcode" -DCMAKE_BUILD_TYPE=Debug
        cmake --build .

  generate_docs:
    name: Doxygen
    runs-on: ubuntu-latest
    if: >
      contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v1
      - run: |
          mkdir -p Build/docs/html/Documents
          cp Documents/Screenshot*.png Build/docs/html/Documents
      - uses: mattnotmitt/doxygen-action@v1
      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./Build/docs/html